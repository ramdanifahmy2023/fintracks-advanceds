import { format } from 'date-fns';
import { id } from 'date-fns/locale';
import { ExportData, ExportOptions, ExportResult } from '@/types/export';
import { formatCurrency } from '@/lib/formatters';

export const generateWhatsAppSummary = async (
  data: ExportData, 
  options: ExportOptions
): Promise<ExportResult> => {
  try {
    const emoji = options.includeEmoji !== false;
    const compact = options.compactFormat !== false;
    const keyMetricsOnly = options.keyMetricsOnly || false;
    
    let summary = '';
    
    // Header
    if (emoji) {
      summary += '📊 *LAPORAN PENJUALAN HIBAN STORE* 📊\n\n';
    } else {
      summary += '*LAPORAN PENJUALAN HIBAN STORE*\n\n';
    }
    
    // Period
    summary += `📅 Periode: ${format(data.dateRange.from, 'dd MMM', { locale: id })} - ${format(data.dateRange.to, 'dd MMM yyyy', { locale: id })}\n\n`;
    
    // Key Metrics
    summary += `💰 *RINGKASAN KEUANGAN*\n`;
    summary += `• Total Omset: *${formatCurrency(data.summary.totalRevenue)}*\n`;
    summary += `• Total Profit: *${formatCurrency(data.summary.totalProfit)}*\n`;
    summary += `• Margin Profit: *${data.summary.profitMargin.toFixed(1)}%*\n`;
    summary += `• Total Transaksi: *${data.summary.totalTransactions.toLocaleString()}*\n`;
    
    if (!compact) {
      summary += `• Rata-rata Order: *${formatCurrency(data.summary.avgOrderValue)}*\n`;
    }
    
    summary += '\n';
    
    if (!keyMetricsOnly) {
      // Platform Performance
      summary += `🏪 *PERFORMA PLATFORM*\n`;
      data.platformPerformance.slice(0, 3).forEach((platform, index) => {
        const medal = index === 0 ? '🥇' : index === 1 ? '🥈' : '🥉';
        summary += `${medal} ${platform.name}: ${formatCurrency(platform.revenue)}\n`;
        if (!compact) {
          summary += `   Profit: ${formatCurrency(platform.profit)} (${platform.profitMargin.toFixed(1)}%)\n`;
        }
      });
      summary += '\n';
      
      // Top Products
      summary += `🎯 *PRODUK TERLARIS*\n`;
      data.topProducts.slice(0, 3).forEach((product, index) => {
        const productName = product.name.length > 30 ? product.name.substring(0, 30) + '...' : product.name;
        summary += `${index + 1}. ${productName}\n`;
        if (compact) {
          summary += `   ${product.quantitySold} unit | ${formatCurrency(product.profit)}\n`;
        } else {
          summary += `   Terjual: ${product.quantitySold} unit\n`;
          summary += `   Revenue: ${formatCurrency(product.revenue)}\n`;
          summary += `   Profit: ${formatCurrency(product.profit)} (${product.profitMargin.toFixed(1)}%)\n`;
        }
      });
      summary += '\n';
      
      // Growth Indicators (if available)
      if (data.growth) {
        summary += `📈 *PERTUMBUHAN*\n`;
        summary += `• Revenue: ${data.growth.revenue > 0 ? '📈' : '📉'} ${Math.abs(data.growth.revenue).toFixed(1)}%\n`;
        summary += `• Transaksi: ${data.growth.transactions > 0 ? '📈' : '📉'} ${Math.abs(data.growth.transactions).toFixed(1)}%\n`;
        if (!compact) {
          summary += `• Profit: ${data.growth.profit > 0 ? '📈' : '📉'} ${Math.abs(data.growth.profit).toFixed(1)}%\n`;
        }
        summary += '\n';
      }
    }
    
    // Key Insights (simplified for WhatsApp)
    if (!keyMetricsOnly) {
      summary += `💡 *INSIGHTS*\n`;
      
      // Revenue concentration on top platform
      const topPlatformShare = (data.platformPerformance[0]?.revenue / data.summary.totalRevenue * 100) || 0;
      if (topPlatformShare > 60) {
        summary += `• ${data.platformPerformance[0]?.name} dominasi ${topPlatformShare.toFixed(0)}% revenue\n`;
      }
      
      // Profit margin analysis
      if (data.summary.profitMargin > 30) {
        summary += `• Profit margin sangat baik (${data.summary.profitMargin.toFixed(1)}%)\n`;
      } else if (data.summary.profitMargin < 15) {
        summary += `• Perlu optimasi profit margin (${data.summary.profitMargin.toFixed(1)}%)\n`;
      }
      
      summary += '\n';
    }
    
    // Footer
    summary += `─────────────────────\n`;
    summary += `🤖 Generated by Hiban Analytics\n`;
    summary += `⏰ ${format(new Date(), 'dd MMM yyyy, HH:mm', { locale: id })}\n`;
    
    // Copy to clipboard
    try {
      await navigator.clipboard.writeText(summary);
      
      // Show success notification would be handled by the calling component
      return {
        success: true,
        fileName: 'whatsapp-summary.txt'
      };
    } catch (error) {
      // If clipboard API fails, we still return success but the calling component
      // should show the text in a modal for manual copying
      return {
        success: true,
        fileName: 'whatsapp-summary.txt',
        error: 'Clipboard access not available - please copy manually'
      };
    }
  } catch (error) {
    console.error('WhatsApp summary generation error:', error);
    return {
      success: false,
      error: error instanceof Error ? error.message : 'Gagal membuat WhatsApp summary'
    };
  }
};